{
    "general": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 990
    },
    "stochastic optimization": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 57
    },
    "computer vision": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 974
    },
    "image generation models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 8
    },
    "one-stage object detection models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 22
    },
    "object detection models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 61
    },
    "graphs": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 108
    },
    "graph representation learning": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 10
    },
    "face recognition models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 6
    },
    "image retrieval models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "skip connection blocks": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 46
    },
    "audio": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 57
    },
    "audio model blocks": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 13
    },
    "generative adversarial networks": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 43
    },
    "graph models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 61
    },
    "feature extractors": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 26
    },
    "attention mechanisms": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 72
    },
    "pooling operations": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 17
    },
    "sequential": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 73
    },
    "time series analysis": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 7
    },
    "adaptive activation functions": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 12
    },
    "activation functions": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 62
    },
    "natural language processing": {
        "taxonomies": [
            "papers_with_code",
            "wikidata_ai",
            "cso"
        ],
        "#papers": 286
    },
    "autoregressive transformers": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 17
    },
    "transformers": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 81
    },
    "sequence to sequence models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 17
    },
    "rule learners": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "generative models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 64
    },
    "reinforcement learning": {
        "taxonomies": [
            "papers_with_code",
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 101
    },
    "heuristic search algorithms": {
        "taxonomies": [
            "papers_with_code",
            "cso"
        ],
        "#papers": 7
    },
    "roi feature extractors": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 12
    },
    "language models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 47
    },
    "3d representations": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 9
    },
    "regularization": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 53
    },
    "contextualized word embeddings": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 7
    },
    "normalization": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 37
    },
    "image model blocks": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 90
    },
    "convolutional neural networks": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 116
    },
    "graph embeddings": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 36
    },
    "image models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 33
    },
    "vision transformers": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 43
    },
    "speech separation models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 5
    },
    "non-parametric regression": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 7
    },
    "non-parametric classification": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 4
    },
    "discriminators": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 6
    },
    "image data augmentation": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 33
    },
    "self-supervised learning": {
        "taxonomies": [
            "papers_with_code",
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 49
    },
    "autoencoding transformers": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 28
    },
    "learning rate schedules": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 12
    },
    "data parallel methods": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 16
    },
    "speaker diarization": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "optimization": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 28
    },
    "convolutions": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 41
    },
    "whitening": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "deep tabular learning": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 26
    },
    "loss functions": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 37
    },
    "kernel methods": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "unpaired image-to-image translation": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 4
    },
    "image representations": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 11
    },
    "sentence embeddings": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 8
    },
    "semi-supervised learning methods": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 23
    },
    "miscellaneous components": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 9
    },
    "6d pose estimation models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "font generation models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "automl": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 9
    },
    "theorem proving models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "q-learning networks": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 8
    },
    "semantic segmentation models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 31
    },
    "text-to-speech models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 11
    },
    "information retrieval methods": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "passage re-ranking models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "active learning": {
        "taxonomies": [
            "papers_with_code",
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 6
    },
    "text classification models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 5
    },
    "interpretability": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 14
    },
    "video model blocks": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 6
    },
    "vision and language pre-trained models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 28
    },
    "multi-modal methods": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 8
    },
    "webpage object detection pipeline": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "attention modules": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 41
    },
    "recurrent neural networks": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 32
    },
    "generative audio models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 16
    },
    "position embeddings": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 5
    },
    "adversarial training": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 14
    },
    "feedforward networks": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 16
    },
    "knowledge distillation": {
        "taxonomies": [
            "papers_with_code",
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 12
    },
    "style transfer models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "instance segmentation modules": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 5
    },
    "style transfer modules": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "policy gradient methods": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 23
    },
    "generative video models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 9
    },
    "3d reconstruction": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 6
    },
    "degridding": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "word embeddings": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 14
    },
    "thermal image processing models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "structured prediction": {
        "taxonomies": [
            "papers_with_code",
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 5
    },
    "generalized linear models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "pose estimation models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 5
    },
    "region proposal": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 5
    },
    "rl transformers": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "ensembling": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "scene text models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "bayesian reinforcement learning": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "video-text retrieval models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "open-domain chatbots": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "conversational models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "instance segmentation models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 15
    },
    "fuzzy logic": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "table parsing models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "domain adaptation": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 14
    },
    "distributed methods": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 39
    },
    "3d face mesh models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "point cloud models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 8
    },
    "reinforcement learning frameworks": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 4
    },
    "medical image models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "proposal filtering": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 7
    },
    "feature pyramid blocks": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 11
    },
    "video frame interpolation": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "robotic manipulation models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "3d object detection models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 9
    },
    "pruning": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "value function estimation": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 6
    },
    "document summary evaluation": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "multi-object tracking models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 7
    },
    "text augmentation": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "representation learning": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 4
    },
    "few-shot image-to-image translation": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "attention patterns": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 8
    },
    "offline reinforcement learning methods": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "action recognition models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 4
    },
    "table question answering models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "on-policy td control": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 5
    },
    "imitation learning methods": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 5
    },
    "neural architecture search": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 20
    },
    "dimensionality reduction": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 7
    },
    "explainable cnns": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "affinity functions": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 4
    },
    "prompt engineering": {
        "taxonomies": [
            "papers_with_code",
            "wikidata_ai"
        ],
        "#papers": 3
    },
    "hyperparameter search": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 4
    },
    "meta-learning algorithms": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 5
    },
    "off-policy td control": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 5
    },
    "trajectory prediction models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "likelihood-based generative models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 10
    },
    "document embeddings": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "sparsity": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "graph data augmentation": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "large batch optimization": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 11
    },
    "video recognition models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "downsampling": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "behaviour policies": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "clustering": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 14
    },
    "topic embeddings": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "2d parallel distributed methods": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "hybrid parallel methods": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 6
    },
    "counting methods": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "cashier-free shopping": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "spreadsheet formula prediction models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "subword segmentation": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 4
    },
    "temporal convolutions": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 8
    },
    "gated linear networks": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "face restoration models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 5
    },
    "image semantic segmentation metric": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "textual inference models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "interactive semantic segmentation models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "question answering models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "statistical inference": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "distributed communication": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "hybrid fuzzing": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "hybrid optimization": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "language model pre-training": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 4
    },
    "anchor generation modules": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "rule-based systems": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "adversarial image data augmentation": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "attention": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 7
    },
    "initialization": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 7
    },
    "multi-scale training": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "prioritized sampling": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 4
    },
    "dialog adaptation": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "skip connections": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 4
    },
    "image denoising models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 4
    },
    "mesh-based simulation models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "adaptive computation": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "object detection modules": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "video instance segmentation models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "asynchronous data parallel": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "policy evaluation": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "vqa models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "image super-resolution models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "distillation": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "distributed reinforcement learning": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 6
    },
    "code generation transformers": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 4
    },
    "adversarial attacks": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "generative discrimination": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "asynchronous pipeline parallel": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 4
    },
    "model parallel methods": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 9
    },
    "reversible image conversion models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "pose estimation blocks": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "relation extraction models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "eligibility traces": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 4
    },
    "synchronous pipeline parallel": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "sequence decoding methods": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "stereo depth estimation models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "board game models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "super-resolution models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "working memory models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 5
    },
    "intra-layer parallel": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "sharded data parallel methods": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "portrait matting models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "video game models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "binary neural networks": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "rendezvous": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "video panoptic segmentation models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "negative sampling": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "tabular data generation": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "output functions": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 9
    },
    "reading comprehension models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "meshing": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "replay memory": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "backbone architectures": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 4
    },
    "model compression": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "tokenizers": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "image quality models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "card game models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "bidirectional recurrent neural networks": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 4
    },
    "point cloud augmentation": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "ocr models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "sample re-weighting": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "semantic segmentation modules": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 12
    },
    "speech recognition": {
        "taxonomies": [
            "papers_with_code",
            "wikidata_ai"
        ],
        "#papers": 5
    },
    "layout annotation models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "distribution approximation": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "image restoration models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 4
    },
    "variational optimization": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "static word embeddings": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 7
    },
    "generative training": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "efficient planning": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "monocular depth estimation models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "recommendation systems": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "video super-resolution models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "reading order detection models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "video data augmentation": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "image segmentation models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 6
    },
    "rgb-d saliency detection models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "information bottleneck": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "robust training": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 4
    },
    "image scaling strategies": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "fourier-related transforms": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "oriented object detection models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "distributions": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "lane detection models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "input embedding factorization": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "entity recognition models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "quantum methods": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 4
    },
    "randomized value functions": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "label correction": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "localization models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "cache replacement models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "parameter norm penalties": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "exaggeration detection models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "video object segmentation models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "state similarity metrics": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "parameter server methods": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 4
    },
    "image colorization models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "lifelong learning": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "person search models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "time series modules": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "textual meaning": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "text instance representations": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "paraphrase generation models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "fine-tuning": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 4
    },
    "bijective transformation": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "synthesized attention mechanisms": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 4
    },
    "replicated data parallel": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 4
    },
    "trajectory data augmentation": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "feature matching": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "phase reconstruction": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "auto parallel methods": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "inference attack": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "robustness methods": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "text data augmentation": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "inference extrapolation": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "markov chain monte carlo": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "mixture-of-experts": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "face-to-face translation": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "conditional image-to-image translation models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "face privacy": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "graphics models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "actor-critic algorithms": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "bot detection": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "generalized additive models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "human object interaction detectors": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "inference engines": {
        "taxonomies": [
            "papers_with_code",
            "cso"
        ],
        "#papers": 2
    },
    "air quality forecasting": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "out-of-distribution example detection": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "copy mechanisms": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "self-training methods": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "latent variable sampling": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 3
    },
    "sequence editing models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "image feature extractors": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 4
    },
    "action recognition blocks": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "audio artifact removal": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "confidence calibration": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "speech enhancement": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "music source separation": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "factorization machines": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "feature upsampling": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "environment design methods": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "dependency parsers": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "confidence estimators": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "video sampling": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "output heads": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "image manipulation models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "slam methods": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "dialogue state trackers": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "incident aggregation models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "taxonomy expansion models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "point cloud representations": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "detection assignment rules": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "global context modules": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "document understanding models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "generalization": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "image inpainting modules": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "augmented reality methods": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "arbitrary object detectors": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "momentum rules": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "network shrinking": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 2
    },
    "control and decision systems": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "path planning": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "motion control": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "density ratio learning": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "approximate inference": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "video inpainting models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "language model components": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "image decomposition models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "manifold disentangling": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "medical waveform analysis": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "sequential blocks": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "speech synthesis blocks": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "learning to rank models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "dialog system evaluation": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "mask branches": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "deraining models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "music transcription": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "entity retrieval models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "machine translation models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "generative sequence models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "anchor supervision": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "twin networks": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "position recovery models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "video interpolation models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "motion prediction models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "video quality models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "geometric matching": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "ternarization": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "math formula detection models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "exploration strategies": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "parameter sharing": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "span representations": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "cad design models": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "speech embeddings": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "long-range interaction layers": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "leadership inference": {
        "taxonomies": [
            "papers_with_code"
        ],
        "#papers": 1
    },
    "machine learning": {
        "taxonomies": [
            "wikidata_ai",
            "cso"
        ],
        "#papers": 13
    },
    "expert system": {
        "taxonomies": [
            "wikidata_ai",
            "cso"
        ],
        "#papers": 2
    },
    "decision support system": {
        "taxonomies": [
            "wikidata_ai",
            "cso"
        ],
        "#papers": 2
    },
    "computational intelligence": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "affective computing": {
        "taxonomies": [
            "wikidata_ai",
            "cso"
        ],
        "#papers": 2
    },
    "evolutionary computation": {
        "taxonomies": [
            "wikidata_ai",
            "cso"
        ],
        "#papers": 2
    },
    "knowledge engineering": {
        "taxonomies": [
            "wikidata_ai",
            "cso"
        ],
        "#papers": 2
    },
    "heuristic algorithm": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "automated planning and scheduling": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "distributed artificial intelligence": {
        "taxonomies": [
            "wikidata_ai",
            "cso"
        ],
        "#papers": 4
    },
    "knowledge representation and reasoning": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "self-management": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "applications of artificial intelligence": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "symbolic artificial intelligence": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "neurorobotics": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "intelligent robotics": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "fictional robot": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "artificial intelligence in fiction": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "artificial empathy": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "artificial intelligence in healthcare": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "explainable ai": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "federated learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "multimodal sentiment analysis": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "artificial intelligence in wikimedia projects": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "quantum artificial intelligence": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "artificial chemist": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "associatron": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "automated music production": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "autonomous navigation": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "green ai": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "red ai": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "ethical artificial intelligence": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "responsible ai": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "vision and language": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "artificial intelligence in material science": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "neuro-symbolic ai": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "strong ai and weak ai": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "applied artificial intelligence": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "machine unlearning": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "autonomous technologies": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "explanation-based learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "pattern recognition": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "hierarchical temporal memory": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "chemometrics": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "unsupervised learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml",
            "cso"
        ],
        "#papers": 3
    },
    "statistical classification": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "transfer learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "meta-learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "multi-task learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "nonlinear dimensionality reduction": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml",
            "cso"
        ],
        "#papers": 3
    },
    "offline learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "one-shot learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "online machine learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "preference learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "robot learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "statistical relational learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "feature learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "quantum machine learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "adversarial machine learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "multiple kernel learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "multimodal learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "m-theory": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "rule-based machine learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "incremental learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "machine learning in bioinformatics": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "sequence-to-sequence learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "automated machine learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "image-to-image translation": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "interactive machine learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "end-to-end learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "machine learning in physics": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "zero-shot learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "gossip learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "declarative machine learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "byy harmony learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "few-shot learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 3
    },
    "pathways": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "semi-supervised and unsupervised learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "personalized machine learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "continual learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "imbalanced learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "natural language understanding": {
        "taxonomies": [
            "wikidata_ai",
            "cso"
        ],
        "#papers": 2
    },
    "part-of-speech tagging": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "natural language generation": {
        "taxonomies": [
            "wikidata_ai",
            "cso"
        ],
        "#papers": 2
    },
    "morphological analysis": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "text segmentation": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "tokenization": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "text simplification": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "morphological parsing": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "chinese information processing": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "computer-based question classification": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "biomedical natural language processing": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "wikification": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "speaker verification": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "word segmentation": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "m\u0101ori natural language processing": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "statistical natural language processing": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "connectionist expert system": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "emycin": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "diagnostic expert system": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "rule-based expert system": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "frame-based expert system": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "metaexpert system": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "monitoring expert system": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "planning expert system": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "group decision support systems": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "fordec": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "automated decision support system": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "ai diagnostics": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "clinical decision support system": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "intelligent decision support systems": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "marketing decision support system": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "spatial decision support system": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "q11668228": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "sentiment analysis": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "metaheuristic": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "heuristic search algorithm": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "monte carlo algorithm": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "informed search algorithm": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "heuristic for determination of copyright status of a creator": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "droid": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "sentinel": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "mobile suit": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "haro": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "replicator": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "manhunters": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "thinking machines": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "egg pawn": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "positronic brain": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "exocomp": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "positronic robot": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "mobile armour": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "deros": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "q6087026": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "transformer": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "robots in futurama": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "omnidroid": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "doombot": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "fictional android": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "leviathan": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "recorders": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "robot master": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "servbot": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "agent": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "five nights at freddy's animatronic": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "q117307251": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "autonomous vehicle": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "battle droid": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "tri-droid": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "og-9 homing spider droid": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "ig-100 magnaguard": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "probe droid": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "q3932529": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "q3977640": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "droideka": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "q5551095": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "crab droid": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "spider droids": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "q6138715": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "buzz droid": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "droid starfighter": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "astromech droid": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "gnk power droid": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "q11680632": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "super battle droid": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "protocol droid": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "q2313222": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "optical character recognition": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 6
    },
    "handwriting recognition": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "model-free reinforcement learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "deep reinforcement learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "multi-agent reinforcement learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "policy-gradient method": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "reinforcement learning from human feedback": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "rx-77-2 guncannon": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "ms-14a gelgoog": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "zaku": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "rx-178 gundam mk-ii": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "rx-79[g] gundam ground type": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "rx-75 guntank": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "gundam": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "msm-04 acguy": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "zaku i": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "ginn": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "gfas-x1 destroy gundam": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "amx-011 zaku iii": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "xm-x crossbone gundam": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "gt-9600 gundam leopard": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "gw-9800 gundam airmaster": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "gat-04 windam": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "ms-18e k\u00e4mpfer": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "amx-003 gaza-c": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "ams-119 geara doga": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "ms-19 dolmel": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "ms-09r rick dom": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "rms-099 rick dias": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "transformable mobile suit": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "amx-109 capule": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "quantitative structure-activity relationship": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "proteochemometrics": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "quantitative structure\u2013property relationship": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "human-form replicators": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "natural language inference": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "knowledge-intensive natural language understanding": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "independent component analysis": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "archetypal analysis": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "boosting": {
        "taxonomies": [
            "wikidata_ai",
            "cso"
        ],
        "#papers": 2
    },
    "q1351503": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "greedy randomized adaptive search procedure": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "firefly algorithm": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "guided local search": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "iterated local search": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "variable neighborhood search": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "autocomplete": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "parody generator": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "document classification": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "multiclass classification": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "binary classification": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml",
            "cso"
        ],
        "#papers": 3
    },
    "sentence boundary disambiguation": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "decompounding": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "ma-05 bigro": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "ts-ma2mod.00 moebius zero": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "orx-005 gaplant": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "nrx-055 baund doc": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "man-03 braw bro": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "deep transfer learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "isomap": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "autobot": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "decepticon": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "maximal": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "predacon": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "vehicon": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "gobots": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "laserbeak": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "headmaster": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "combiner (transformers)": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "triple changer": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "recon team": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "slugfest": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "throttlebots": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "flareup": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "cassette robots": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "mean field particle methods": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "sparse dictionary learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "replicant": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "life model decoy": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "nindroid": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "fictional gynoid": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "artificial immune system": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "genetic algorithm": {
        "taxonomies": [
            "wikidata_ai",
            "cso"
        ],
        "#papers": 2
    },
    "local search": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "autonomous underwater vehicle": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "autonomous car": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "autonomous truck": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "autonomous bus": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "autonomous aircraft": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "autonomous watercraft": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "autonomous spacecraft": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "q9051700": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "aerialbots": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "dinobot": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "air raid": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "inferno": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "wreckers": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "afterburners": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "ricochet": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "micr": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "intelligent character recognition": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "optical braille recognition": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "hill climbing": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "genetic algorithm scheduling": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "interactive evolutionary computation": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "underwater glider": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "remus": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "email filtering": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "waymo": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "renault ez-go": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "renault ez-ultimo": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "navya autonom cab": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "apolong": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "yandex self-driving car": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "command-line completion": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "intelligent code completion": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "shockwave": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "insecticons": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "duocons": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "over-run": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "overload": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "horrorcons": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "beam search": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "local beam search": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "mini-con": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "paper generator": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "q3998527": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "q-learning": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "proximal policy optimization": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "trust region policy optimization": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "challenge\u2013response spam filtering": {
        "taxonomies": [
            "wikidata_ai",
            "wikidata_ml"
        ],
        "#papers": 2
    },
    "huntington ingalls seaglider m1": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "liberdade class underwater glider": {
        "taxonomies": [
            "wikidata_ai"
        ],
        "#papers": 1
    },
    "decision theory": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "intelligent control": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "natural language processing systems": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "formal logic": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "cognitive systems": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "soft computing": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "medical computing": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "system theory": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "decision support systems": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "decision support system %28dss%29": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "bayesian networks": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "bayesian network": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "machine-learning": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "cellular automata": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "cellular automata %28ca%29": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "knowledge based systems": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "knowledge-based systems": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "expert systems": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "multi agent system %28mas%29": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "multi-agent system": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "multi-agent systems": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "multi agent systems": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "multiagent systems": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "intelligent robots": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "ambient intelligence": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "heuristic programming": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "intelligent tutoring": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "intelligent tutoring system": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "intelligent tutoring systems": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "intelligence analysis": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "ai planning": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "planning algorithms": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "constraint satisfaction problems %28csp%29": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "software engineering": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "data mining": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "image interpretation%2c computer-assisted": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "computer assisted diagnosis": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "electronic commerce": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "information storage and retrieval": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "information management": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "automata theory": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "text processing": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "formal languages": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "conformal mapping": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "computability and decidability": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "non-determinism": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "state space": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "genetic programming": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "genetic programming %28gp%29": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "real time systems": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "real-time systems": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "evolutionary algorithms": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "evolutionary algorithm": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "model checking": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "model-checking": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "sensor networks": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "sensor network": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "recommender systems": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "recommender system": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "decision trees": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "decision tree": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "classifiers": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "classifier": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "adaptive systems": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "adaptive system": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "social networks": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "social network": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "multi objective optimizations %28moo%29": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "multiobjective optimization": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "multi-objective optimization": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "ontology": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "ontologies": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "wireless sensor network %28wsns%29": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "wireless sensor networks %28wsns%29": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "wireless sensor network %28wsn%29": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "wireless sensor networks": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "wireless sensor network": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "man machine systems": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "ontology mapping": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "agent technology": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "tabu search": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "image classification": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "conjunctive queries": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "constraint programming": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "formal concept analysis": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "nsga-ii": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "evolutionary approach": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "self-adaptive": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "evolutionary process": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "data points": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "real data sets": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "word sense disambiguation": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "computational grammars": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "prolog %28programming language%29": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "constraint logic programming": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "event calculus": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "horn clause": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "learning agents": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "mergers and acquisitions": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "graph-based": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "probabilistic graphical models": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "activity recognition": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "mechanism design": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "automated theorem proving": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "information loss": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "text document": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "gibbs sampling": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "binary particle swarm optimization": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "attribute reduction algorithm": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "image annotation": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "computational resources": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "process mining": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "naive bayes": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "classification rules": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "formal approach": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "formal framework": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "tutoring system": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "computer assisted": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "exact inference": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "inference": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "scada systems": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "in-process": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "process-oriented": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "group members": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "user interests": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "user profiling": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "taxation": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "computer aided": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "reinforcement learning method": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "action spaces": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "model free": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "value function approximation": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "mutual informations": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "mutual information": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "first order logic": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "first-order logic": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "combinatorial auctions": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "combinatorial auction": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "modal logic": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "modal logics": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "high dimensional data": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "high-dimensional data": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "ensemble classifiers": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "ensemble classifier": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "descriptors": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "descriptor": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "visual feature": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "visual features": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "formal model": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "formal models": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "classifier ensembles": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "classifier ensemble": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "partially observable markov decision process": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "partially observable markov decision processes": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "memetic algorithms": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "memetic algorithm": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "matrix factorizations": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "matrix factorization": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "natural languages": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "natural language": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "coalition formations": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "coalition formation": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "data stream": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "data streams": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "personalization": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "personalizations": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "mobile agents": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "mobile agent": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "evolutionary computations": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "computing with words": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "computing with word %28cww%29": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "estimation of distribution algorithms": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "estimation of distribution algorithm": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "distributed environments": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "distributed environment": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "value functions": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "value function": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "personalized service": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "personalized services": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "evaluation models": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "evaluation model": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "binary classifiers": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "agent based": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "agent-based": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "probabilistic models": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "probabilistic model": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "unified medical language system": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "unified medical language systems": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "user profile": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "user profiles": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "cross validation": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "cross-validation": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "satisfiability problems": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "satisfiability problem": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "self organizing": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "self-organizing": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "hierarchical structures": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "hierarchical structure": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "distributed architecture": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "distributed architectures": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "agent-based systems": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "agent-based system": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "domain knowledge": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "domain experts": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "human robot interaction": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "human-robot interaction": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "human robot interactions": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "markov decision process %28mdp%29": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "markov decision processes": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "markov decision process": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "computer-aided diagnosis %28cad%29": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "computer aided diagnosis": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "computer-aided diagnosis": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "student modeling": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "student models": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "student model": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "knowledge base": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "knowledge bases": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "cognitive modeling": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "cognitive model": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "cognitive models": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "supervised machine learning": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "background knowledge": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "automatic classification": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "class labels": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "epistemic logic": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "decision making%2c computer-assisted": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "swarm robotics": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "stigmergy": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "word similarity": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "fuzzy-neural": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "systems integration": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "textual data": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "biomedical literature": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "text data": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "continuous data": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "extracting information": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "free texts": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "player experience": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "game designers": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "affective state": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "natural language text": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "knowledge engineers": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "single-agent": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "agent model": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "initial solution": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "numerical analysis%2c computer-assisted": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "cbr": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "cbr systems": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "case-based reasoning approaches": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "similar case": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "rule base": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "automatic evaluation": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "situation awareness": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "user preferences": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "latent variable models": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "boolean satisfiability": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "solution concepts": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "exploration and exploitation": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "candidate solution": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "memetic": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "k-nn classifier": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "k-nearest neighbor classifier": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "low-dimensional spaces": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "demonstrations": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "re-planning": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "markov logic networks": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "sat-solving": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "dempster-shafer theory of evidence": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "sat problems": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "pedagogical agents": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "intelligent tutors": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "action language": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "low-dimensional manifolds": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "k-nn": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "high-dimensional feature space": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "multi-class problems": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "multi-class classifier": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "sequential decision making": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "spatial objects": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "user information": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "pair-wise comparison": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "preference information": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "computer integrated manufacturing": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "technical indicator": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "trading systems": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "bayesian networks %28bns%29": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "bayesian network classifiers": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "probabilistic modeling": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "solution accuracy": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "electric fault location": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "curse of dimensionality": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "programming framework": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "self-organize": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "proof system": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "traffic networks": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "expectation propagation": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "rule engine": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "dialogue": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "business decisions": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "proof search": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "continuous state": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "concept drifts": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "concept drift": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "embodied agent": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "embodied agents": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "latent variable": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "latent variables": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "decision support techniques": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "decision support systems%2c clinical": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "ordered weighted averaging": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "ordered weighted averaging operator": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "dynamic environments": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "dynamic environment": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "random projections": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "random projection": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "information content": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "information contents": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "binary classification problems": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "high-quality solutions": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "combining classifiers": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "casebased reasonings %28cbr%29": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "user activity": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "points of interest": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "supervised classifiers": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "appearance modeling": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "domain theory": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "crossover operations": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "learning from demonstration": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "decision models": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "decision model": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "document-processing": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "document processing": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "non-stationary environment": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "evaluation system": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "theoretical result": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "artificial intelligence@en ": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "cso#topic": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 2
    },
    "distributed artificial intelligence@en ": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "game theory": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "machine learning techniques": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "machine learning methods": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "machine learning algorithms": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "genetic algorithm %28ga%29": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "genetic algorithms": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "intelligent systems": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "machine learnings": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "multi agent system": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "multiagent system": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "swarm intelligence": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "nlp": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "commonsense": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "common-sense": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "commonsense reasoning": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "common-sense reasoning": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "common-sense computing": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "commonsense computing": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "common sense": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "ambient intelligent": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "bayesian approaches": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "bayesian approach": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "bayesian": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "bayesian model": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "bayesian models": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "bayesian method": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "bayesian frameworks": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "bayesian framework": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "bayesian methods": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "artificial intelligence": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 2
    },
    "q11660": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "q3153007": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "m.0mkz": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "m.01jgvl": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "mx4rvvi4wjwpebgdrcn5y29yca": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    },
    "2777200204": {
        "taxonomies": [
            "cso"
        ],
        "#papers": 1
    }
}